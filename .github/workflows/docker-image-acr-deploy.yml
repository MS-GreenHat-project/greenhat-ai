name: Build and Push Yolov8 Demo Image to ACR

on:
  push:
    branches:
      - develop  # 필요 시 master로 변경

    paths:
      - 'app.py'              # Flask 애플리케이션
      - 'requirements.txt'    # Python 의존성
      - 'Dockerfile'          # Docker 빌드 파일
      - '*.py'               # 모든 Python 파일
      - 'manifests/**'       # Kubernetes 매니페스트
      - '.github/workflows/backend/**'  # 백엔드 워크플로우 변경시
      - 'best*.pt'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: yolov8-demo-dev
      IMAGE_TAG: ${{ github.run_number }}
      IMAGE_PATH: manifests/deployment.yaml

    steps:
      # 1. GitHub Repo Checkout
      - name: 'Checkout Repository'
        uses: actions/checkout@v4


      # 2. ACR 로그인
      - name: 'Login to Azure Container Registry'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 3. Docker 이미지 빌드 및 푸시
      - name: 'Build and Push Docker Image'
        run: |
          FULL_IMAGE=${{ secrets.AZURE_URL }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

          echo "▶️ Building image: $FULL_IMAGE"
          docker build -t $FULL_IMAGE .

          echo "🚀 Pushing image to ACR"
          docker push $FULL_IMAGE

          echo "📝 Updating deployment manifest with new image"
          sed -i "s|image: .*$|image: $FULL_IMAGE|" $IMAGE_PATH

      # 4. 푸시한 이미지로 manifest 이미지 경로 업데이트
      - name: Commit and Push Updated Manifest
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add ${{ env.IMAGE_PATH }}
          git commit -m "Update image to ${{ env.IMAGE_TAG }} [CI skip]" || echo "No changes to commit"
          git push
